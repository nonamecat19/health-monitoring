generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:1@localhost:5432/HealthMonitoring"
}

model fingerprint {
  id_fingerprint   Int     @id @default(autoincrement())
  id_person        Int?
  fingerprint_data Bytes
  person           person? @relation(fields: [id_person], references: [id_person], onDelete: NoAction, onUpdate: NoAction)
}

model person {
  id_person      Int              @id @default(autoincrement())
  name_person    String           @db.VarChar(150)
  study_group    String?          @db.VarChar(150)
  role_person    String           @db.VarChar(150)
  fingerprint    fingerprint[]
  person_records person_records[]
}

model person_records {
  id_person_records   Int      @id @default(autoincrement())
  id_person           Int?
  room_number         String?  @db.VarChar
  oxygen              Decimal  @db.Decimal
  heart_rate          Decimal  @db.Decimal
  temperature         Decimal  @db.Decimal
  is_critical_results Boolean
  recorded_time       DateTime @db.Time(6)
  recorded_date       DateTime @db.Date
  person              person?  @relation(fields: [id_person], references: [id_person], onDelete: NoAction, onUpdate: NoAction)
  room                room?    @relation(fields: [room_number], references: [room_number], onDelete: NoAction, onUpdate: NoAction)
}

model room {
  room_number    String           @id @db.VarChar(150)
  room_type      String?          @db.VarChar(150)
  person_records person_records[]
  room_records   room_records[]
}

model room_records {
  id_room_records     Int      @id @default(autoincrement())
  room_number         String?  @db.VarChar
  humidity            Decimal  @db.Decimal
  temperature         Decimal  @db.Decimal
  pressure            Decimal  @db.Decimal
  carbon_dioxide      Decimal  @db.Decimal
  air_ions            Decimal  @db.Decimal
  ozone               Decimal  @db.Decimal
  is_critical_results Boolean
  recorded_time       DateTime @db.Time(6)
  recorded_date       DateTime @db.Date
  room                room?    @relation(fields: [room_number], references: [room_number], onDelete: NoAction, onUpdate: NoAction)
}

model admin {
  id_admin Int    @id @default(autoincrement())
  email    String @db.VarChar(150)
  // role     String @db.VarChar(15)
  // name     String @db.VarChar(30)
  // surname  String @db.VarChar(30)
}
