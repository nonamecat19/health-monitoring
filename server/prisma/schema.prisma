datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:1@localhost:5432/HealthMonitoring"
}

generator client {
  provider = "prisma-client-js"
}

model Person {
  id_person       Int               @id @default(autoincrement())
  name_person     String            @db.VarChar(150)
  study_group     String?           @db.VarChar(150)
  role            String            @default("Студент") @db.VarChar(150)
  PersonCondition PersonCondition[]
  Fingerprint     Fingerprint[]
}

model Fingerprint {
  id_fingerprint   Int    @id @default(autoincrement())
  id_person        Int
  person           Person @relation(fields: [id_person], references: [id_person])
  fingerprint_data Bytes
}

model Room {
  id_room              Int                    @id @default(autoincrement())
  room_number          Int                    @unique
  PersonCondition      PersonCondition[]
  EnvironmentCondition EnvironmentCondition[]
}

model DateOfRecording {
  id_date              Int                    @id @default(autoincrement())
  recorded_date        DateTime               @db.Date()
  PersonCondition      PersonCondition[]
  EnvironmentCondition EnvironmentCondition[]
}

model PersonCondition {
  id_person_condition   Int             @id @default(autoincrement())
  id_person             Int
  person                Person          @relation(fields: [id_person], references: [id_person])
  id_room               Int
  room                  Room            @relation(fields: [id_room], references: [id_room])
  id_date               Int
  date_of_recording     DateOfRecording @relation(fields: [id_date], references: [id_date])
  oxygen                Float
  heart_rate            Float
  body_temperature      Float
  is_critical_condition Boolean         @db.Boolean()
  recorded_time         DateTime        @db.Time()
}

model EnvironmentCondition {
  id_environment_condition Int             @id @default(autoincrement())
  id_room                  Int
  room                     Room            @relation(fields: [id_room], references: [id_room])
  id_date                  Int
  date_of_recording        DateOfRecording @relation(fields: [id_date], references: [id_date])
  humidity                 Float
  air_temperature          Float
  air_pressure             Float
  nitrogen_content         Float
  is_critical_condition    Boolean         @db.Boolean()
  recorded_time            DateTime        @db.Time()
}
